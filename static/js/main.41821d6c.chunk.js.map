{"version":3,"sources":["constant/index.js","components/CounterIncrease.js","components/CounterDecrease.js","connector/index.js","components/CounterGet.js","App.js","library/index.js","index.js"],"names":["COUNTER_ABI","COUNTER_ADDRESS","CounterInc","useWeb3React","library","account","onClick","signer","getSigner","connectUnchecked","ethers","Contract","inc","then","result","CounterDec","dec","injectedConnector","InjectedConnector","supportedChinIds","CountGet","useState","count","setCount","get","toNumber","App","chainId","activate","active","style","color","getLibrary","provider","Web3Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,EAAc,CACzB,8CACA,0BACA,2BAIWC,EAAkB,6CCYhBC,MAff,WACE,MAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAWjB,OAAO,wBAAQC,QATH,WACV,IAAMC,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAASI,UAAUH,GAASI,mBACnB,IAAIC,IAAOC,SACjCV,EACAD,EACAO,GAEcK,MAAMC,MAAK,SAACC,QAEvB,kBCGMC,MAff,WACE,MAA6BZ,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAWjB,OAAO,wBAAQC,QATH,WACV,IAAMC,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAASI,UAAUH,GAASI,mBACnB,IAAIC,IAAOC,SACjCV,EACAD,EACAO,GAEcS,MAAMH,MAAK,SAACC,QAEvB,kBCdIG,EAAoB,I,MAAIC,GAAkB,CACrDC,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,M,QC0BlBC,MAvBf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQnB,EAAYD,cAAZC,QAaR,OACE,gCACE,wBAAQE,QAdA,WACc,IAAII,IAAOC,SACjCV,EACAD,EACAI,GAGcoB,MAAMX,MAAK,SAACC,GAC1BS,EAAST,EAAOW,gBAMhB,uBACA,8BAAMH,QCMGI,MAvBf,WACE,MAA+CvB,cAAvCwB,EAAR,EAAQA,QAAStB,EAAjB,EAAiBA,QAASuB,EAA1B,EAA0BA,SAAUC,EAApC,EAAoCA,OAMpC,OACE,gCACE,8CAAiBF,KACjB,6CAAgBtB,KACfwB,EACC,qBAAKC,MAAO,CAAEC,MAAO,eAArB,wBAEA,wBAAQzB,QAXE,WACdsB,EAASX,IAUL,qBAEF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QClBSe,MALf,SAAoBC,GAElB,OADgB,IAAIC,IAAaD,ICInCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAmBL,WAAYA,EAA/B,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U","file":"static/js/main.41821d6c.chunk.js","sourcesContent":["export const COUNTER_ABI = [\r\n  \" function get() public view returns (uint) \",\r\n  \" function inc() public \",\r\n  \" function dec() public \",\r\n];\r\n///안바뀌는 변수는 대문자\r\n\r\nexport const COUNTER_ADDRESS = \"0x77b39D8dd35Dd6bCb2E1561023E3AFe4eF078F77\";\r\n","import { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport { COUNTER_ABI, COUNTER_ADDRESS } from \"../constant\";\r\n\r\nfunction CounterInc() {\r\n  const { library, account } = useWeb3React();\r\n\r\n  const inc = () => {\r\n    const signer = library?.getSigner(account).connectUnchecked();\r\n    const counterContract = new ethers.Contract(\r\n      COUNTER_ADDRESS,\r\n      COUNTER_ABI,\r\n      signer\r\n    );\r\n    counterContract.inc().then((result) => {});\r\n  };\r\n  return <button onClick={inc}>Inc</button>;\r\n}\r\n\r\nexport default CounterInc;\r\n","import { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport { COUNTER_ABI, COUNTER_ADDRESS } from \"../constant\";\r\n\r\nfunction CounterDec() {\r\n  const { library, account } = useWeb3React();\r\n\r\n  const dec = () => {\r\n    const signer = library?.getSigner(account).connectUnchecked();\r\n    const counterContract = new ethers.Contract(\r\n      COUNTER_ADDRESS,\r\n      COUNTER_ABI,\r\n      signer\r\n    );\r\n    counterContract.dec().then((result) => {});\r\n  };\r\n  return <button onClick={dec}>Dec</button>;\r\n}\r\n\r\nexport default CounterDec;\r\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\nexport const injectedConnector = new InjectedConnector({\r\n  supportedChinIds: [1, 3, 4, 5, 42],\r\n});\r\n","import { useWeb3React } from \"@web3-react/core\";\r\nimport { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { COUNTER_ABI, COUNTER_ADDRESS } from \"../constant\";\r\n///생성자 함수 앞에 new -> 객체 만들어서 넣어줌\r\n\r\nfunction CountGet() {\r\n  const [count, setCount] = useState(0);\r\n  const { library } = useWeb3React();\r\n  const get = () => {\r\n    const counterContract = new ethers.Contract(\r\n      COUNTER_ADDRESS,\r\n      COUNTER_ABI,\r\n      library\r\n    );\r\n\r\n    counterContract.get().then((result) => {\r\n      setCount(result.toNumber());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={get}>Get Count</button>\r\n      <div>{count}</div>\r\n    </div>\r\n  );\r\n}\r\n///프로미스 .then 해서 counterContract.get이 끝나면 그다음에 뒤에 것을 실행해줘라\r\nexport default CountGet;\r\n","import { ColorButton, ConnectButton } from \"./components/Button\";\nimport CounterInc from \"./components/CounterIncrease\";\nimport CounterDec from \"./components/CounterDecrease\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { injectedConnector } from \"./connector\";\nimport CountGet from \"./components/CounterGet\";\n///대문자여야 컴포넌트로 인식???\nfunction App() {\n  const { chainId, account, activate, active } = useWeb3React();\n\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n\n  return (\n    <div>\n      <div>Chain Id : {chainId}</div>\n      <div>Account : {account}</div>\n      {active ? (\n        <div style={{ color: \"yellowgreen\" }}>Connected!</div>\n      ) : (\n        <button onClick={onClick}>connect</button>\n      )}\n      <CountGet />\n      <CounterInc />\n      <CounterDec />\n    </div>\n  );\n}\n\nexport default App;\n","import { Web3Provider } from \"@ethersproject/providers\";\r\n\r\nfunction getLibrary(provider) {\r\n  const library = new Web3Provider(provider);\r\n  return library;\r\n}\r\n\r\nexport default getLibrary;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport getLibrary from \"./library\";\n\n///web3React프로바이더 = 칠드런한테도 프로바이딩\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}